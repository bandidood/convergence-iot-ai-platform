# ================================================================
# DOCKER COMPOSE - STACK MONITORING
# Station Traffeyère IoT/AI Platform - Observabilité Complète
# ================================================================

version: '3.8'

services:
  # Prometheus - Métriques
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: station-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configurations/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./configurations/prometheus/rules:/etc/prometheus/rules
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring-network
    restart: unless-stopped

  # Grafana - Dashboards
  grafana:
    image: grafana/grafana:10.1.2
    container_name: station-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - ./configurations/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./configurations/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./configurations/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # Node Exporter - Métriques système
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: station-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring-network
    restart: unless-stopped

  # cAdvisor - Métriques containers
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: station-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - monitoring-network
    restart: unless-stopped

  # AlertManager - Gestion alertes
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: station-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./configurations/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./configurations/alertmanager/templates:/etc/alertmanager/templates
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring-network
    restart: unless-stopped

  # Jaeger - Tracing distribué
  jaeger:
    image: jaegertracing/all-in-one:1.49.0
    container_name: station-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    volumes:
      - jaeger-data:/tmp
    networks:
      - monitoring-network
    restart: unless-stopped

  # Loki - Logs aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: station-loki
    ports:
      - "3100:3100"
    volumes:
      - ./configurations/loki/loki.yml:/etc/loki/loki.yml
      - loki-data:/loki
    command: -config.file=/etc/loki/loki.yml
    networks:
      - monitoring-network
    restart: unless-stopped

  # Promtail - Log collector
  promtail:
    image: grafana/promtail:2.9.0
    container_name: station-promtail
    volumes:
      - ./configurations/promtail/promtail.yml:/etc/promtail/promtail.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail.yml
    networks:
      - monitoring-network
    depends_on:
      - loki
    restart: unless-stopped

  # Blackbox Exporter - Monitoring externe
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: station-blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./configurations/blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    networks:
      - monitoring-network
    restart: unless-stopped

  # MQTT Exporter - Métriques IoT
  mqtt-exporter:
    image: kpetrem/mqtt-exporter:latest
    container_name: station-mqtt-exporter
    ports:
      - "9234:9234"
    environment:
      - MQTT_ADDRESS=mosquitto:1883
      - MQTT_TOPIC=sensor/+/+
      - MQTT_USERNAME=mqtt_user
      - MQTT_PASSWORD=mqtt_password
      - PROMETHEUS_PORT=9234
    networks:
      - monitoring-network
      - iot-network
    restart: unless-stopped

  # Custom Metrics Collector
  custom-metrics-collector:
    build:
      context: ./monitoring/custom-collector
      dockerfile: Dockerfile
    container_name: station-custom-collector
    ports:
      - "8000:8000"
    environment:
      - PROMETHEUS_PORT=8000
      - LOG_LEVEL=INFO
    volumes:
      - ./configurations/custom-collector:/app/config
    networks:
      - monitoring-network
    restart: unless-stopped

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local
  jaeger-data:
    driver: local
  loki-data:
    driver: local

networks:
  monitoring-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
    labels:
      - "com.station-traffeyere.network.type=monitoring"
      - "com.station-traffeyere.network.zone=internal"
  
  iot-network:
    external: true