# ================================================================
# DOCKER COMPOSE - STACK SÉCURITÉ
# Station Traffeyère IoT/AI Platform - Architecture Zero Trust
# ================================================================

version: '3.8'

services:
  # HashiCorp Vault - Gestion des secrets
  vault:
    image: hashicorp/vault:1.15.2
    container_name: station-vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_ADDR: http://0.0.0.0:8200
    volumes:
      - ./configurations/vault/config:/vault/config
      - ./configurations/vault/policies:/vault/policies
      - vault-data:/vault/data
    cap_add:
      - IPC_LOCK
    command: vault server -dev -dev-listen-address=0.0.0.0:8200
    networks:
      - security-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Elastic Security - SIEM
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: station-elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=station-security-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./configurations/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
    networks:
      - security-network
    restart: unless-stopped

  # Kibana - Interface SIEM
  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.0
    container_name: station-kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
    volumes:
      - ./configurations/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch
    networks:
      - security-network
    restart: unless-stopped

  # Wazuh Manager - Host-based Intrusion Detection
  wazuh-manager:
    image: wazuh/wazuh-manager:4.7.0
    container_name: station-wazuh-manager
    hostname: wazuh-manager
    environment:
      - WAZUH_MANAGER_IP=wazuh-manager
    volumes:
      - wazuh-manager-config:/wazuh-config-mount/etc/wazuh
      - wazuh-manager-logs:/var/ossec/logs
      - ./configurations/wazuh/ossec.conf:/wazuh-config-mount/etc/wazuh/ossec.conf
    ports:
      - "1514:1514"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
    networks:
      - security-network
    restart: unless-stopped

  # Suricata - Network Intrusion Detection System
  suricata:
    image: jasonish/suricata:latest
    container_name: station-suricata
    network_mode: host
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    volumes:
      - ./configurations/suricata/suricata.yaml:/etc/suricata/suricata.yaml
      - ./security/suricata-rules:/var/lib/suricata/rules
      - suricata-logs:/var/log/suricata
    environment:
      - SURICATA_OPTIONS=-i eth0
    restart: unless-stopped

  # NGINX Security Proxy
  nginx-security:
    image: nginx:alpine
    container_name: station-nginx-security
    ports:
      - "443:443"
      - "8443:8443"
    volumes:
      - ./configurations/nginx/nginx-security.conf:/etc/nginx/nginx.conf
      - ./configurations/nginx/security.conf:/etc/nginx/conf.d/security.conf
      - ./configurations/certificates:/etc/nginx/certs
      - nginx-logs:/var/log/nginx
    networks:
      - security-network
      - iot-network
    restart: unless-stopped
    depends_on:
      - vault

  # Security Orchestration, Automation and Response (SOAR)
  soar-engine:
    build:
      context: ./core/soar-engine
      dockerfile: Dockerfile
    container_name: station-soar
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=myroot
      - ELASTICSEARCH_HOST=elasticsearch:9200
    volumes:
      - ./configurations/soar:/app/config
      - ./security/playbooks:/app/playbooks
    networks:
      - security-network
    depends_on:
      - vault
      - elasticsearch
    restart: unless-stopped

  # Security Monitoring Dashboard
  security-dashboard:
    build:
      context: ./interfaces/soc-dashboard
      dockerfile: Dockerfile
    container_name: station-security-dashboard
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_ELASTICSEARCH_URL=http://elasticsearch:9200
      - REACT_APP_KIBANA_URL=http://kibana:5601
      - REACT_APP_VAULT_URL=http://vault:8200
    networks:
      - security-network
    depends_on:
      - elasticsearch
      - kibana
      - vault
    restart: unless-stopped

volumes:
  vault-data:
    driver: local
  elasticsearch-data:
    driver: local
  wazuh-manager-config:
    driver: local
  wazuh-manager-logs:
    driver: local
  suricata-logs:
    driver: local
  nginx-logs:
    driver: local

networks:
  security-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    labels:
      - "com.station-traffeyere.network.type=security"
      - "com.station-traffeyere.network.zone=dmz"
  
  iot-network:
    external: true