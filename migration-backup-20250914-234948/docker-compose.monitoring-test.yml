# Stack Monitoring Test - RNCP 39394
# Version simplifiée pour tests locaux

version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

services:
  # Prometheus - Collecte métriques
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: rncp-39394-prometheus-test
    restart: unless-stopped
    
    ports:
      - "9090:9090"
    
    networks:
      - monitoring
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--log.level=info'
      
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules.yaml:/etc/prometheus/rules.yaml:ro
      - prometheus_data:/prometheus
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - Dashboards
  grafana:
    image: grafana/grafana:10.0.0
    container_name: rncp-39394-grafana-test
    restart: unless-stopped
    
    ports:
      - "3000:3000"
    
    networks:
      - monitoring
    
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=AdminRNCP39394!2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_ANALYTICS_REPORTING_ENABLED=false
      
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    
    depends_on:
      - prometheus

  # Alertmanager - Gestion alertes
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: rncp-39394-alertmanager-test
    restart: unless-stopped
    
    ports:
      - "9093:9093"
    
    networks:
      - monitoring
    
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.listen-address=:9093'
      - '--log.level=info'
      
    volumes:
      - ./monitoring/alertmanager/config.yaml:/etc/alertmanager/config.yml:ro
      - alertmanager_data:/alertmanager
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter - Métriques système
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: rncp-39394-node-exporter-test
    restart: unless-stopped
    
    ports:
      - "9100:9100"
    
    networks:
      - monitoring
    
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
