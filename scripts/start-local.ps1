# =============================================================================
# SCRIPT DE LANCEMENT LOCAL - Station Traffey√®re IoT/AI Platform
# Tests Windows avant d√©ploiement Linux - RNCP 39394
# =============================================================================

Write-Host "üöÄ Station Traffey√®re IoT/AI Platform - Test Local Windows" -ForegroundColor Cyan
Write-Host "RNCP 39394 - Expert en Syst√®mes d'Information et S√©curit√©" -ForegroundColor Yellow
Write-Host ""

# V√©rifier Docker
Write-Host "üîç V√©rification de l'environnement..." -ForegroundColor Green
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker: $dockerVersion" -ForegroundColor Green
    
    $composeVersion = docker-compose --version
    Write-Host "‚úÖ Docker Compose: $composeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker non disponible. Veuillez installer Docker Desktop." -ForegroundColor Red
    exit 1
}

# Nettoyer les anciens conteneurs (optionnel)
Write-Host ""
$cleanup = Read-Host "Nettoyer les anciens conteneurs ? (y/N)"
if ($cleanup -eq "y" -or $cleanup -eq "Y") {
    Write-Host "üßπ Nettoyage des anciens conteneurs..." -ForegroundColor Yellow
    docker-compose -f docker-compose.local.yml down -v --remove-orphans
}

# Construction des images
Write-Host ""
Write-Host "üî® Construction des images personnalis√©es..." -ForegroundColor Blue
docker-compose -f docker-compose.local.yml build --parallel

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors de la construction des images" -ForegroundColor Red
    exit 1
}

# D√©marrage des services
Write-Host ""
Write-Host "‚ö° D√©marrage de tous les services..." -ForegroundColor Blue
docker-compose -f docker-compose.local.yml up -d

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors du d√©marrage des services" -ForegroundColor Red
    exit 1
}

# Attendre que les services d√©marrent
Write-Host ""
Write-Host "‚è≥ Attente du d√©marrage des services (30s)..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

# V√©rification des services
Write-Host ""
Write-Host "üîç V√©rification des services..." -ForegroundColor Green

# V√©rifier PostgreSQL
try {
    docker exec station-traffeyere-iot-ai-platform-postgres-1 pg_isready -U postgres
    Write-Host "‚úÖ PostgreSQL op√©rationnel" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è PostgreSQL non pr√™t" -ForegroundColor Yellow
}

# V√©rifier Redis
try {
    $redisTest = docker exec station-traffeyere-iot-ai-platform-redis-1 redis-cli ping
    if ($redisTest -eq "PONG") {
        Write-Host "‚úÖ Redis op√©rationnel" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è Redis non pr√™t" -ForegroundColor Yellow
}

# V√©rifier Backend
try {
    $backendHealth = Invoke-RestMethod -Uri "http://localhost:8000/health" -TimeoutSec 5
    Write-Host "‚úÖ Backend FastAPI op√©rationnel" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Backend non pr√™t (normal si encore en d√©marrage)" -ForegroundColor Yellow
}

# V√©rifier Frontend
try {
    $frontendHealth = Invoke-RestMethod -Uri "http://localhost:3000/healthz" -TimeoutSec 5
    Write-Host "‚úÖ Frontend React op√©rationnel" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Frontend non pr√™t (normal si encore en d√©marrage)" -ForegroundColor Yellow
}

# Statut des conteneurs
Write-Host ""
Write-Host "üìä Statut des conteneurs:" -ForegroundColor Cyan
docker-compose -f docker-compose.local.yml ps

# URLs d'acc√®s
Write-Host ""
Write-Host "üåê URLs d'acc√®s:" -ForegroundColor Cyan
Write-Host "Frontend:      http://localhost:3000" -ForegroundColor White
Write-Host "Backend API:   http://localhost:8000/api/docs" -ForegroundColor White
Write-Host "InfluxDB:      http://localhost:8086" -ForegroundColor White
Write-Host "Grafana:       http://localhost:3001 (admin/admin)" -ForegroundColor White
Write-Host "Prometheus:    http://localhost:9090" -ForegroundColor White

# Options post-d√©marrage
Write-Host ""
Write-Host "üìã Actions disponibles:" -ForegroundColor Magenta
Write-Host "1. Ouvrir le frontend dans le navigateur" -ForegroundColor White
Write-Host "2. Voir les logs en temps r√©el" -ForegroundColor White
Write-Host "3. Lancer les tests de validation" -ForegroundColor White
Write-Host "4. Arr√™ter tous les services" -ForegroundColor White

$action = Read-Host "Votre choix (1-4)"

switch ($action) {
    "1" {
        Write-Host "üåê Ouverture du frontend..." -ForegroundColor Green
        Start-Process "http://localhost:3000"
        Start-Process "http://localhost:8000/api/docs"
    }
    "2" {
        Write-Host "üìã Logs en temps r√©el (Ctrl+C pour arr√™ter)..." -ForegroundColor Green
        docker-compose -f docker-compose.local.yml logs -f
    }
    "3" {
        Write-Host "üß™ Tests de validation..." -ForegroundColor Green
        Write-Host "Voir le fichier TEST-LOCAL-WINDOWS.md pour les tests complets" -ForegroundColor Yellow
    }
    "4" {
        Write-Host "üõë Arr√™t des services..." -ForegroundColor Red
        docker-compose -f docker-compose.local.yml down
        Write-Host "‚úÖ Services arr√™t√©s" -ForegroundColor Green
    }
    default {
        Write-Host "‚úÖ Services d√©marr√©s. Consultez TEST-LOCAL-WINDOWS.md pour les tests." -ForegroundColor Green
    }
}

Write-Host ""
Write-Host "üéØ Plateforme Station Traffey√®re pr√™te pour tests locaux!" -ForegroundColor Green
Write-Host "üìö Consultez TEST-LOCAL-WINDOWS.md pour les tests complets" -ForegroundColor Cyan